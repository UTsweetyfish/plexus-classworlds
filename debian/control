Source: plexus-classworlds
Section: java
Priority: optional
Maintainer: Debian Java Maintainers <pkg-java-maintainers@lists.alioth.debian.org>
Uploaders:
 Ludovic Claude <ludovic.claude@laposte.net>,
 Damien Raude-Morvan <drazzib@debian.org>
Build-Depends:
 ant,
 debhelper (>= 11),
 default-jdk,
 default-jdk-doc,
 libcommons-logging-java,
 libjaxp1.3-java,
 libmaven-bundle-plugin-java,
 libmaven-dependency-plugin-java,
 libmaven-javadoc-plugin-java,
 maven-debian-helper (>= 2.2)
Standards-Version: 4.3.0
Vcs-Git: https://salsa.debian.org/java-team/plexus-classworlds.git
Vcs-Browser: https://salsa.debian.org/java-team/plexus-classworlds
Homepage: https://codehaus-plexus.github.io/plexus-classworlds/

Package: libplexus-classworlds-java
Architecture: all
Depends: ${misc:Depends}, ${maven:Depends}
Suggests: ${maven:OptionalDepends}, libplexus-classworlds-java-doc
Breaks: libplexus-classworlds2-java (<< 2.5.2-2~)
Replaces: libplexus-classworlds2-java (<< 2.5.2-2~)
Description: Class loading utilities for the Plexus framework
 The Plexus project provides a full software stack for creating and executing
 software projects. Based on the Plexus container, the applications can
 utilise component-oriented programming to build modular, reusable components
 that can easily be assembled and reused.
 .
 While Plexus is similar to other inversion-of-control (IoC) or dependency
 injection frameworks such as the Spring Framework, it is a full-fledged
 container that supports many more features such as:
 .
  * Component lifecycles
  * Component instantiation strategies
  * Nested containers
  * Component configuration
  * Auto-wiring
  * Component dependencies, and
  * Various dependency injection techniques including constructor injection,
   setter injection, and private field injection.

Package: libplexus-classworlds2-java
Architecture: all
Section: oldlibs
Depends: ${misc:Depends}, libplexus-classworlds-java (>= 2.5.2-2~)
Description: Class loading utilities for the Plexus framework (transitional package)
 The Plexus project provides a full software stack for creating and executing
 software projects. Based on the Plexus container, the applications can
 utilise component-oriented programming to build modular, reusable components
 that can easily be assembled and reused.
 .
 While Plexus is similar to other inversion-of-control (IoC) or dependency
 injection frameworks such as the Spring Framework, it is a full-fledged
 container that supports many more features such as:
 .
  * Component lifecycles
  * Component instantiation strategies
  * Nested containers
  * Component configuration
  * Auto-wiring
  * Component dependencies, and
  * Various dependency injection techniques including constructor injection,
   setter injection, and private field injection.
 .
 This is a transitional package, please use libplexus-classworlds-java instead.

Package: libplexus-classworlds-java-doc
Architecture: all
Section: doc
Depends: ${maven:DocDepends}, ${misc:Depends}
Suggests: ${maven:DocOptionalDepends}, libplexus-classworlds-java
Description: Class loading utilities for the Plexus framework - documentation
 The Plexus project provides a full software stack for creating and executing
 software projects. Based on the Plexus container, the applications can
 utilise component-oriented programming to build modular, reusable components
 that can easily be assembled and reused.
 .
 While Plexus is similar to other inversion-of-control (IoC) or dependency
 injection frameworks such as the Spring Framework, it is a full-fledged
 container that supports many more features such as:
 .
  * Component lifecycles
  * Component instantiation strategies
  * Nested containers
  * Component configuration
  * Auto-wiring
  * Component dependencies, and
  * Various dependency injection techniques including constructor injection,
   setter injection, and private field injection.
 .
 This package provides the API documentation for libplexus-classworlds-java.
